syntax = "proto3";

package netsensor;

import "google/protobuf/timestamp.proto";

option go_package = "netsensor";
option java_package = "us.ihmc.nodemon.sensors.netsensor";
option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_outer_classname = "ICMPPacketsByInterfaceProto";

message ICMPPacketsByInterface
{
	string monitoringInterface                = 1; // Interface that detected the ICMP packets
	repeated ProtoICMPInfoContainer icmpContainers = 2; // List of icmp information objects
}

message ProtoICMPInfoContainer
{
	string sourceMAC       = 1; // Source MAC address as string
	string destMAC		   = 2; // Destination MAC address as string
	string sourceIPAddr    = 3; // Source IP address as string
	string destIPAddr      = 4; // Destination IP address as string
	uint32 type            = 5; // Uint32 type of ICMP packet
	uint32 code            = 6; // Uint32 code value of the type of ICMP packet
	uint32 count           = 7; // Count of repeated ICMP packets that have been sent
	ProtoData ICMPPayload  = 8; // IP header and first 8 bytes of original datagram (or other requested ICMP data)
	google.protobuf.Timestamp  timestamp = 9; // Time that last packet was received
}
message ProtoData
{
	uint32 pointerToError   = 1; // Points to the byte that contains a problem in the original sent datagram
	ProtoIdentification id  = 2; // ICMP identification used by some packet types
	ProtoIpHeader ipHeader  = 3; // Original IPv4 header
	ProtoDatagramInfo dgram = 4; // Datagram information
	ProtoICMPTime icmpTimestamp  = 5; // ICMP timestamp reply/request structure
	repeated ProtoExtraAddresses extraAddresses = 6; // Additional addresses from address mask req/reply and redirect packets
}

message ProtoIdentification
{
	uint32 identifier 	  = 1; // The identifier of the packet to match packets
	uint32 sequenceNumber = 2; // The sequence number of the packet to match packets
}

message ProtoIpHeader
{
	uint32 tos              = 1; // Type of service
	uint32 length           = 2; // Total length of the original datagram
	uint32 protocol		    = 3; // Protocol
	string origSourceIPAddr = 4; // Original TCP/UDP/etc packet's source IP address
	string origDestIPAddr   = 5; // Original TCP/UDP/etc packet's destination IP address
}

message ProtoDatagramInfo
{
	uint32 sourcePort = 1; // Source port of original datagram
	uint32 destPort   = 2; // Destination port of original datagram
}

message ProtoICMPTime
{
	uint32 originateTimestamp = 1; // Time that the sender last touched the ICMP message
	uint32 receiveTimestamp   = 2; // Time that the echoer first touched the ICMP message
	uint32 transmitTimestamp  = 3; // Time that the echoer last touched the ICMP message
}

message ProtoExtraAddresses
{
	string IPAddress = 1;     // IP address of packet (byte 5-8 of payload)
	uint32 timesRepeated = 2; // Number of time this IPAddress has been repeated
}