// Code generated by protoc-gen-go.
// source: icmpinfo.proto
// DO NOT EDIT!

package netsensor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ICMPPacketsByInterface struct {
	MonitoringInterface string                    `protobuf:"bytes,1,opt,name=monitoringInterface" json:"monitoringInterface,omitempty"`
	IcmpContainers      []*ProtoICMPInfoContainer `protobuf:"bytes,2,rep,name=icmpContainers" json:"icmpContainers,omitempty"`
}

func (m *ICMPPacketsByInterface) Reset()                    { *m = ICMPPacketsByInterface{} }
func (m *ICMPPacketsByInterface) String() string            { return proto.CompactTextString(m) }
func (*ICMPPacketsByInterface) ProtoMessage()               {}
func (*ICMPPacketsByInterface) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ICMPPacketsByInterface) GetMonitoringInterface() string {
	if m != nil {
		return m.MonitoringInterface
	}
	return ""
}

func (m *ICMPPacketsByInterface) GetIcmpContainers() []*ProtoICMPInfoContainer {
	if m != nil {
		return m.IcmpContainers
	}
	return nil
}

type ProtoICMPInfoContainer struct {
	SourceMAC    string                     `protobuf:"bytes,1,opt,name=sourceMAC" json:"sourceMAC,omitempty"`
	DestMAC      string                     `protobuf:"bytes,2,opt,name=destMAC" json:"destMAC,omitempty"`
	SourceIPAddr string                     `protobuf:"bytes,3,opt,name=sourceIPAddr" json:"sourceIPAddr,omitempty"`
	DestIPAddr   string                     `protobuf:"bytes,4,opt,name=destIPAddr" json:"destIPAddr,omitempty"`
	Type         uint32                     `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	Code         uint32                     `protobuf:"varint,6,opt,name=code" json:"code,omitempty"`
	Count        uint32                     `protobuf:"varint,7,opt,name=count" json:"count,omitempty"`
	ICMPPayload  *ProtoData                 `protobuf:"bytes,8,opt,name=ICMPPayload,json=iCMPPayload" json:"ICMPPayload,omitempty"`
	Timestamp    *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ProtoICMPInfoContainer) Reset()                    { *m = ProtoICMPInfoContainer{} }
func (m *ProtoICMPInfoContainer) String() string            { return proto.CompactTextString(m) }
func (*ProtoICMPInfoContainer) ProtoMessage()               {}
func (*ProtoICMPInfoContainer) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ProtoICMPInfoContainer) GetSourceMAC() string {
	if m != nil {
		return m.SourceMAC
	}
	return ""
}

func (m *ProtoICMPInfoContainer) GetDestMAC() string {
	if m != nil {
		return m.DestMAC
	}
	return ""
}

func (m *ProtoICMPInfoContainer) GetSourceIPAddr() string {
	if m != nil {
		return m.SourceIPAddr
	}
	return ""
}

func (m *ProtoICMPInfoContainer) GetDestIPAddr() string {
	if m != nil {
		return m.DestIPAddr
	}
	return ""
}

func (m *ProtoICMPInfoContainer) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ProtoICMPInfoContainer) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ProtoICMPInfoContainer) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ProtoICMPInfoContainer) GetICMPPayload() *ProtoData {
	if m != nil {
		return m.ICMPPayload
	}
	return nil
}

func (m *ProtoICMPInfoContainer) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ProtoData struct {
	PointerToError uint32                 `protobuf:"varint,1,opt,name=pointerToError" json:"pointerToError,omitempty"`
	Id             *ProtoIdentification   `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	IpHeader       *ProtoIpHeader         `protobuf:"bytes,3,opt,name=ipHeader" json:"ipHeader,omitempty"`
	Dgram          *ProtoDatagramInfo     `protobuf:"bytes,4,opt,name=dgram" json:"dgram,omitempty"`
	IcmpTimestamp  *ProtoICMPTime         `protobuf:"bytes,5,opt,name=icmpTimestamp" json:"icmpTimestamp,omitempty"`
	ExtraAddresses []*ProtoExtraAddresses `protobuf:"bytes,6,rep,name=extraAddresses" json:"extraAddresses,omitempty"`
}

func (m *ProtoData) Reset()                    { *m = ProtoData{} }
func (m *ProtoData) String() string            { return proto.CompactTextString(m) }
func (*ProtoData) ProtoMessage()               {}
func (*ProtoData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ProtoData) GetPointerToError() uint32 {
	if m != nil {
		return m.PointerToError
	}
	return 0
}

func (m *ProtoData) GetId() *ProtoIdentification {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProtoData) GetIpHeader() *ProtoIpHeader {
	if m != nil {
		return m.IpHeader
	}
	return nil
}

func (m *ProtoData) GetDgram() *ProtoDatagramInfo {
	if m != nil {
		return m.Dgram
	}
	return nil
}

func (m *ProtoData) GetIcmpTimestamp() *ProtoICMPTime {
	if m != nil {
		return m.IcmpTimestamp
	}
	return nil
}

func (m *ProtoData) GetExtraAddresses() []*ProtoExtraAddresses {
	if m != nil {
		return m.ExtraAddresses
	}
	return nil
}

type ProtoIdentification struct {
	Identifier     uint32 `protobuf:"varint,1,opt,name=identifier" json:"identifier,omitempty"`
	SequenceNumber uint32 `protobuf:"varint,2,opt,name=sequenceNumber" json:"sequenceNumber,omitempty"`
}

func (m *ProtoIdentification) Reset()                    { *m = ProtoIdentification{} }
func (m *ProtoIdentification) String() string            { return proto.CompactTextString(m) }
func (*ProtoIdentification) ProtoMessage()               {}
func (*ProtoIdentification) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ProtoIdentification) GetIdentifier() uint32 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func (m *ProtoIdentification) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

type ProtoIpHeader struct {
	Tos              uint32 `protobuf:"varint,1,opt,name=tos" json:"tos,omitempty"`
	Length           uint32 `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Protocol         uint32 `protobuf:"varint,3,opt,name=protocol" json:"protocol,omitempty"`
	OrigSourceIPAddr string `protobuf:"bytes,4,opt,name=origSourceIPAddr" json:"origSourceIPAddr,omitempty"`
	OrigDestIPAddr   string `protobuf:"bytes,5,opt,name=origDestIPAddr" json:"origDestIPAddr,omitempty"`
}

func (m *ProtoIpHeader) Reset()                    { *m = ProtoIpHeader{} }
func (m *ProtoIpHeader) String() string            { return proto.CompactTextString(m) }
func (*ProtoIpHeader) ProtoMessage()               {}
func (*ProtoIpHeader) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ProtoIpHeader) GetTos() uint32 {
	if m != nil {
		return m.Tos
	}
	return 0
}

func (m *ProtoIpHeader) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ProtoIpHeader) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *ProtoIpHeader) GetOrigSourceIPAddr() string {
	if m != nil {
		return m.OrigSourceIPAddr
	}
	return ""
}

func (m *ProtoIpHeader) GetOrigDestIPAddr() string {
	if m != nil {
		return m.OrigDestIPAddr
	}
	return ""
}

type ProtoDatagramInfo struct {
	SourcePort uint32 `protobuf:"varint,1,opt,name=sourcePort" json:"sourcePort,omitempty"`
	DestPort   uint32 `protobuf:"varint,2,opt,name=destPort" json:"destPort,omitempty"`
}

func (m *ProtoDatagramInfo) Reset()                    { *m = ProtoDatagramInfo{} }
func (m *ProtoDatagramInfo) String() string            { return proto.CompactTextString(m) }
func (*ProtoDatagramInfo) ProtoMessage()               {}
func (*ProtoDatagramInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ProtoDatagramInfo) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *ProtoDatagramInfo) GetDestPort() uint32 {
	if m != nil {
		return m.DestPort
	}
	return 0
}

type ProtoICMPTime struct {
	OriginateTimestamp uint32 `protobuf:"varint,1,opt,name=originateTimestamp" json:"originateTimestamp,omitempty"`
	ReceiveTimestamp   uint32 `protobuf:"varint,2,opt,name=receiveTimestamp" json:"receiveTimestamp,omitempty"`
	TransmitTimestamp  uint32 `protobuf:"varint,3,opt,name=transmitTimestamp" json:"transmitTimestamp,omitempty"`
}

func (m *ProtoICMPTime) Reset()                    { *m = ProtoICMPTime{} }
func (m *ProtoICMPTime) String() string            { return proto.CompactTextString(m) }
func (*ProtoICMPTime) ProtoMessage()               {}
func (*ProtoICMPTime) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ProtoICMPTime) GetOriginateTimestamp() uint32 {
	if m != nil {
		return m.OriginateTimestamp
	}
	return 0
}

func (m *ProtoICMPTime) GetReceiveTimestamp() uint32 {
	if m != nil {
		return m.ReceiveTimestamp
	}
	return 0
}

func (m *ProtoICMPTime) GetTransmitTimestamp() uint32 {
	if m != nil {
		return m.TransmitTimestamp
	}
	return 0
}

type ProtoExtraAddresses struct {
	IPAddress     string `protobuf:"bytes,1,opt,name=IPAddress,json=iPAddress" json:"IPAddress,omitempty"`
	TimesRepeated uint32 `protobuf:"varint,2,opt,name=timesRepeated" json:"timesRepeated,omitempty"`
}

func (m *ProtoExtraAddresses) Reset()                    { *m = ProtoExtraAddresses{} }
func (m *ProtoExtraAddresses) String() string            { return proto.CompactTextString(m) }
func (*ProtoExtraAddresses) ProtoMessage()               {}
func (*ProtoExtraAddresses) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *ProtoExtraAddresses) GetIPAddress() string {
	if m != nil {
		return m.IPAddress
	}
	return ""
}

func (m *ProtoExtraAddresses) GetTimesRepeated() uint32 {
	if m != nil {
		return m.TimesRepeated
	}
	return 0
}

func init() {
	proto.RegisterType((*ICMPPacketsByInterface)(nil), "netsensor.ICMPPacketsByInterface")
	proto.RegisterType((*ProtoICMPInfoContainer)(nil), "netsensor.ProtoICMPInfoContainer")
	proto.RegisterType((*ProtoData)(nil), "netsensor.ProtoData")
	proto.RegisterType((*ProtoIdentification)(nil), "netsensor.ProtoIdentification")
	proto.RegisterType((*ProtoIpHeader)(nil), "netsensor.ProtoIpHeader")
	proto.RegisterType((*ProtoDatagramInfo)(nil), "netsensor.ProtoDatagramInfo")
	proto.RegisterType((*ProtoICMPTime)(nil), "netsensor.ProtoICMPTime")
	proto.RegisterType((*ProtoExtraAddresses)(nil), "netsensor.ProtoExtraAddresses")
}

func init() { proto.RegisterFile("icmpinfo.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x18, 0xd4, 0xa6, 0x4d, 0xda, 0x7c, 0x21, 0x55, 0xeb, 0x56, 0xd5, 0xaa, 0x54, 0x25, 0x5d, 0x21,
	0x14, 0x21, 0xb4, 0x45, 0x01, 0x21, 0x4e, 0x48, 0x6d, 0x5a, 0x44, 0x0e, 0x85, 0x95, 0xe9, 0x05,
	0x24, 0x0e, 0xee, 0xee, 0x97, 0xd4, 0x22, 0x6b, 0x07, 0xdb, 0x41, 0xf4, 0x41, 0x38, 0x70, 0xe3,
	0xca, 0x7b, 0xf0, 0x0a, 0xbc, 0x0f, 0xb2, 0xbd, 0xd9, 0xcd, 0xdf, 0xcd, 0x9e, 0x19, 0xdb, 0x9f,
	0x67, 0x3e, 0x1b, 0x76, 0x78, 0x9a, 0x4f, 0xb8, 0x18, 0xca, 0x78, 0xa2, 0xa4, 0x91, 0xa4, 0x29,
	0xd0, 0x68, 0x14, 0x5a, 0xaa, 0xa3, 0x47, 0x23, 0x29, 0x47, 0x63, 0x3c, 0x73, 0xc4, 0xed, 0x74,
	0x78, 0x66, 0x78, 0x8e, 0xda, 0xb0, 0x7c, 0xe2, 0xb5, 0xd1, 0xcf, 0x00, 0x0e, 0x07, 0xfd, 0xeb,
	0x24, 0x61, 0xe9, 0x57, 0x34, 0xfa, 0xe2, 0x7e, 0x20, 0x0c, 0xaa, 0x21, 0x4b, 0x91, 0x3c, 0x87,
	0xfd, 0x5c, 0x0a, 0x6e, 0xa4, 0xe2, 0x62, 0x54, 0xc2, 0x61, 0xd0, 0x09, 0xba, 0x4d, 0xba, 0x8e,
	0x22, 0x03, 0x5f, 0x4a, 0x5f, 0x0a, 0xc3, 0xb8, 0x40, 0xa5, 0xc3, 0x5a, 0x67, 0xa3, 0xdb, 0xea,
	0x9d, 0xc6, 0x65, 0x45, 0x71, 0x62, 0x8f, 0xb5, 0x27, 0x0e, 0xc4, 0x50, 0x96, 0x4a, 0xba, 0xb4,
	0x30, 0xfa, 0x5b, 0x83, 0xc3, 0xf5, 0x52, 0x72, 0x0c, 0x4d, 0x2d, 0xa7, 0x2a, 0xc5, 0xeb, 0xf3,
	0x7e, 0x51, 0x4d, 0x05, 0x90, 0x10, 0xb6, 0x32, 0xd4, 0xc6, 0x72, 0x35, 0xc7, 0xcd, 0xa6, 0x24,
	0x82, 0x07, 0x5e, 0x36, 0x48, 0xce, 0xb3, 0x4c, 0x85, 0x1b, 0x8e, 0x5e, 0xc0, 0xc8, 0x09, 0x80,
	0x95, 0x17, 0x8a, 0x4d, 0xa7, 0x98, 0x43, 0x08, 0x81, 0x4d, 0x73, 0x3f, 0xc1, 0xb0, 0xde, 0x09,
	0xba, 0x6d, 0xea, 0xc6, 0x16, 0x4b, 0x65, 0x86, 0x61, 0xc3, 0x63, 0x76, 0x4c, 0x0e, 0xa0, 0x9e,
	0xca, 0xa9, 0x30, 0xe1, 0x96, 0x03, 0xfd, 0x84, 0xbc, 0x82, 0x96, 0xf7, 0xfa, 0x7e, 0x2c, 0x59,
	0x16, 0x6e, 0x77, 0x82, 0x6e, 0xab, 0x77, 0xb0, 0x6c, 0xce, 0x25, 0x33, 0x8c, 0xb6, 0x78, 0x25,
	0x24, 0xaf, 0xa1, 0x59, 0xe6, 0x16, 0x36, 0xdd, 0xaa, 0xa3, 0xd8, 0x27, 0x1b, 0xcf, 0x92, 0x8d,
	0x6f, 0x66, 0x0a, 0x5a, 0x89, 0xa3, 0x7f, 0x35, 0x68, 0x96, 0x9b, 0x92, 0x27, 0xb0, 0x33, 0x91,
	0xdc, 0xc6, 0x75, 0x23, 0xaf, 0x94, 0x92, 0xca, 0xd9, 0xd7, 0xa6, 0x4b, 0x28, 0x89, 0xa1, 0xc6,
	0x33, 0x67, 0x5f, 0xab, 0x77, 0xb2, 0x92, 0x5d, 0x86, 0xc2, 0xf0, 0x21, 0x4f, 0x99, 0xe1, 0x52,
	0xd0, 0x1a, 0xcf, 0xc8, 0x4b, 0xd8, 0xe6, 0x93, 0x77, 0xc8, 0x32, 0xf4, 0xae, 0xb6, 0x7a, 0xe1,
	0xca, 0xaa, 0x82, 0xa7, 0xa5, 0x92, 0xf4, 0xa0, 0x9e, 0x8d, 0x14, 0xcb, 0x9d, 0xcd, 0xad, 0xde,
	0xf1, 0x3a, 0x1f, 0x2c, 0x6f, 0xd3, 0xa7, 0x5e, 0x4a, 0xde, 0x40, 0xdb, 0x36, 0x4a, 0x79, 0x57,
	0x17, 0xc4, 0xba, 0xe3, 0xfa, 0xd7, 0x89, 0x15, 0xd1, 0x45, 0x39, 0x79, 0x0b, 0x3b, 0xf8, 0xc3,
	0x28, 0x66, 0xc3, 0x44, 0xad, 0x51, 0x87, 0x0d, 0xd7, 0xa1, 0x2b, 0xb7, 0xbc, 0x5a, 0x50, 0xd1,
	0xa5, 0x55, 0xd1, 0x17, 0xd8, 0x5f, 0x63, 0x86, 0x6d, 0x1f, 0x5e, 0x20, 0x38, 0x33, 0x77, 0x0e,
	0xb1, 0x01, 0x68, 0xfc, 0x36, 0x45, 0x91, 0xe2, 0xfb, 0x69, 0x7e, 0x8b, 0xca, 0x99, 0xdc, 0xa6,
	0x4b, 0x68, 0xf4, 0x27, 0x80, 0xf6, 0x82, 0x6d, 0x64, 0x17, 0x36, 0x8c, 0xd4, 0xc5, 0x96, 0x76,
	0x48, 0x0e, 0xa1, 0x31, 0x46, 0x31, 0x32, 0x77, 0xc5, 0x1e, 0xc5, 0x8c, 0x1c, 0xc1, 0xb6, 0xeb,
	0x89, 0x54, 0x8e, 0x5d, 0x18, 0x6d, 0x5a, 0xce, 0xc9, 0x53, 0xd8, 0x95, 0x8a, 0x8f, 0x3e, 0xce,
	0x3f, 0x03, 0xdf, 0xe4, 0x2b, 0xb8, 0xad, 0xd5, 0x62, 0x97, 0xd5, 0x73, 0xa8, 0x3b, 0xe5, 0x12,
	0x1a, 0x7d, 0x80, 0xbd, 0x95, 0xb8, 0xac, 0x11, 0xfe, 0x5d, 0x25, 0x52, 0x99, 0x99, 0x11, 0x15,
	0x62, 0x8b, 0xb4, 0xaf, 0xca, 0xb1, 0xbe, 0xfc, 0x72, 0x1e, 0xfd, 0x2a, 0x2f, 0x5f, 0x84, 0x48,
	0x62, 0x20, 0xf6, 0x50, 0x2e, 0x98, 0xc1, 0x2a, 0x7a, 0xbf, 0xeb, 0x1a, 0xc6, 0x5e, 0x53, 0x61,
	0x8a, 0xfc, 0xfb, 0x9c, 0xda, 0x9f, 0xb2, 0x82, 0x93, 0x67, 0xb0, 0x67, 0x14, 0x13, 0x3a, 0xe7,
	0xa6, 0x12, 0x7b, 0xdf, 0x56, 0x89, 0xe8, 0x53, 0x91, 0xfb, 0x62, 0x7b, 0xd8, 0x2f, 0xc9, 0xbb,
	0x81, 0x5a, 0xcf, 0xbe, 0x24, 0x3e, 0x03, 0xc8, 0x63, 0x68, 0xbb, 0x17, 0x49, 0x71, 0x82, 0xcc,
	0x60, 0x56, 0xd4, 0xb2, 0x08, 0x5e, 0x24, 0x70, 0x3a, 0xd5, 0x31, 0xbf, 0xcb, 0xd3, 0x58, 0xc8,
	0x0c, 0x73, 0x29, 0x62, 0xdf, 0x90, 0xba, 0xea, 0xcd, 0x8b, 0x87, 0xeb, 0xff, 0x6a, 0x57, 0x53,
	0x12, 0x7c, 0xae, 0x7e, 0xfe, 0xdf, 0x41, 0x70, 0xdb, 0x70, 0xb9, 0xbf, 0xf8, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0x32, 0xad, 0x04, 0xc2, 0x20, 0x06, 0x00, 0x00,
}
