// Code generated by protoc-gen-go.
// source: measure.proto
// DO NOT EDIT!

/*
Package measure is a generated protocol buffer package.

It is generated from these files:
	measure.proto
	subject.proto

It has these top-level messages:
	Measure
*/
package measure

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// a Measure of a certain "subject" describes the data stored in the associated fields.
type Measure struct {
	Subject   Subject                    `protobuf:"varint,1,opt,name=subject,enum=measure.Subject" json:"subject,omitempty"`
	Strings   map[string]string          `protobuf:"bytes,2,rep,name=strings" json:"strings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Integers  map[string]int64           `protobuf:"bytes,3,rep,name=integers" json:"integers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Doubles   map[string]float64         `protobuf:"bytes,4,rep,name=doubles" json:"doubles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Measure) Reset()                    { *m = Measure{} }
func (m *Measure) String() string            { return proto.CompactTextString(m) }
func (*Measure) ProtoMessage()               {}
func (*Measure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Measure) GetSubject() Subject {
	if m != nil {
		return m.Subject
	}
	return Subject_host
}

func (m *Measure) GetStrings() map[string]string {
	if m != nil {
		return m.Strings
	}
	return nil
}

func (m *Measure) GetIntegers() map[string]int64 {
	if m != nil {
		return m.Integers
	}
	return nil
}

func (m *Measure) GetDoubles() map[string]float64 {
	if m != nil {
		return m.Doubles
	}
	return nil
}

func (m *Measure) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*Measure)(nil), "measure.Measure")
}

func init() { proto.RegisterFile("measure.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4b, 0xfb, 0x30,
	0x14, 0xc7, 0xc9, 0xfa, 0xdb, 0xaf, 0xee, 0x6d, 0x93, 0x11, 0x04, 0x43, 0x41, 0x1d, 0x9e, 0x8a,
	0x87, 0x0c, 0x2a, 0xe2, 0xa8, 0xb7, 0xa1, 0x07, 0x0f, 0x83, 0x51, 0x3d, 0x79, 0x6b, 0xb7, 0x58,
	0xab, 0x6d, 0x33, 0x9a, 0x44, 0xd8, 0x7f, 0xe3, 0xdf, 0xe4, 0x5f, 0x24, 0x6d, 0x92, 0x5a, 0x11,
	0xd9, 0x2d, 0xef, 0xbd, 0xcf, 0x87, 0xc7, 0xfb, 0x12, 0x18, 0x17, 0x2c, 0x16, 0xaa, 0x62, 0x74,
	0x5b, 0x71, 0xc9, 0xb1, 0x6b, 0x4a, 0xef, 0x2c, 0xe5, 0x3c, 0xcd, 0xd9, 0xac, 0x69, 0x27, 0xea,
	0x79, 0x26, 0xb3, 0x82, 0x09, 0x19, 0x17, 0x5b, 0x4d, 0x7a, 0x63, 0xa1, 0x92, 0x57, 0xb6, 0x96,
	0xba, 0x3c, 0xff, 0x74, 0xc0, 0x5d, 0x6a, 0x17, 0x5f, 0x80, 0x6b, 0x86, 0x04, 0x4d, 0x91, 0x7f,
	0x18, 0x4c, 0xa8, 0xdd, 0xf2, 0xa0, 0xfb, 0x91, 0x05, 0xf0, 0x35, 0xb8, 0x42, 0x56, 0x59, 0x99,
	0x0a, 0xd2, 0x9b, 0x3a, 0xfe, 0x30, 0x38, 0x69, 0xd9, 0xa5, 0x75, 0xf4, 0xfc, 0xae, 0x94, 0xd5,
	0x2e, 0xb2, 0x34, 0x0e, 0xe1, 0x20, 0x2b, 0x25, 0x4b, 0x59, 0x25, 0x88, 0xd3, 0x98, 0xa7, 0xbf,
	0xcc, 0x7b, 0x03, 0x68, 0xb5, 0xe5, 0xeb, 0xa5, 0x1b, 0xae, 0x92, 0x9c, 0x09, 0xf2, 0xef, 0x8f,
	0xa5, 0xb7, 0x7a, 0x6e, 0x96, 0x1a, 0x1a, 0xcf, 0x61, 0xd0, 0xe6, 0x40, 0xfa, 0x53, 0xe4, 0x0f,
	0x03, 0x8f, 0xea, 0xa4, 0xa8, 0x4d, 0x8a, 0x3e, 0x5a, 0x22, 0xfa, 0x86, 0xbd, 0x10, 0x46, 0xdd,
	0x3b, 0xf0, 0x04, 0x9c, 0x37, 0xb6, 0x6b, 0xf2, 0x19, 0x44, 0xf5, 0x13, 0x1f, 0x41, 0xff, 0x3d,
	0xce, 0x15, 0x23, 0xbd, 0xa6, 0xa7, 0x8b, 0xb0, 0x37, 0x47, 0xde, 0x0d, 0x8c, 0x7f, 0x5c, 0xb2,
	0x4f, 0x76, 0xba, 0x72, 0x08, 0xa3, 0xee, 0x2d, 0xfb, 0x5c, 0xd4, 0x71, 0x17, 0x57, 0x70, 0xac,
	0x04, 0xcd, 0x5e, 0x8a, 0x35, 0x2d, 0xf9, 0x86, 0x15, 0xbc, 0xb4, 0x39, 0x2d, 0x46, 0x26, 0xa8,
	0x55, 0x7d, 0xf5, 0x0a, 0x3d, 0xd9, 0x8f, 0xf3, 0x81, 0x50, 0xf2, 0xbf, 0x89, 0xe2, 0xf2, 0x2b,
	0x00, 0x00, 0xff, 0xff, 0xdc, 0x6c, 0x0f, 0x4d, 0x5c, 0x02, 0x00, 0x00,
}
